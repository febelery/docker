#############################################
#   author:ross                             #
#   mail:yesterday679@gmail.com             #
#   time:2017/02/20                         #
#   description:docker compose              #
#############################################
version: '2'

services:

  ######## drivers ########
  drivers:
    image: tianon/true
    volumes:
      - ${DRIVES_PATH}:/var/www/html


  ######## php-fpm ########
  php-fpm:
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
      args:
        - INSTALL_MYSQLI=${INSTALL_MYSQLI}
        - INSTALL_PDO_MYSQL=${INSTALL_PDO_MYSQL}
        - INSTALL_SWOOLE=${INSTALL_SWOOLE}
        - INSTALL_REDIS=${INSTALL_REDIS}
        - INSTALL_OPCACHE=${INSTALL_OPCACHE}
        - INSTALL_PCNTL=${INSTALL_PCNTL}
        - INSTALL_IMAGICK=${INSTALL_IMAGICK}
        - INSTALL_GD=${INSTALL_GD}
        - INSTALL_ZIP=${INSTALL_ZIP}
        - INSTALL_MSGPACK=${INSTALL_MSGPACK}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - INSTALL_SOAP=${INSTALL_SOAP}
        - INSTALL_MONGO=${INSTALL_MONGO}
        - INSTALL_ZIP_ARCHIVE=${INSTALL_ZIP_ARCHIVE}
        - INSTALL_BCMATH=${INSTALL_BCMATH}
        - INSTALL_MEMCACHED=${INSTALL_MEMCACHED}
        - INSTALL_XHPROF=${INSTALL_XHPROF}
        - CODEIGNITER=${CODEIGNITER}
        - PHP_XDEBUG_VERSION=${PHP_XDEBUG_VERSION}
    volumes_from:
      - drivers
    volumes:
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
    ports:
      - "9501:9501"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      XDEBUG_CONFIG: ${XDEBUG_CONFIG}
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
    networks:
      - backend


  ######## nginx ########
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM=php-fpm
    volumes_from:
      - drivers
    volumes:
      - ./logs/nginx/:/var/log/nginx
      - ./nginx/ssl/:/etc/ssl
      - ./nginx/config/:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend


  ######## mysql ########
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
      args:
          - MYSQL_USER=ross
          - MYSQL_PASSWORD=ross
          - MYSQL_ROOT_PASSWORD=root
    volumes:
      #- mysql:/var/lib/mysql
      - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend


  ######## redis ########
  redis:
    build:
      context: ./redis
    volumes:
      #- redis:/data
      - ${DATA_SAVE_PATH}/redis:/data
    ports:
      - "6379:6379"
    networks:
      - backend


  ######## openresty ########
  openresty:
    build:
      context: ./openresty
    volumes_from:
      - drivers
    volumes:
      - ./logs/openresty/:/usr/local/openresty/nginx/logs
      - ./openresty/conf/:/usr/local/openresty/nginx/conf.d
    ports:
      - "8888:8888"
    networks:
      - backend
    privileged: true


  ######## slate ########
  slate:
    build:
      context: ./slate
      dockerfile: Dockerfile
    volumes:
      - ${SLATE_SOURCE_PATH}:/usr/src/slate/source
    ports:
      - "4567:4567"

  ###### MongoDB Container ######

  mongo:
    build: ./mongo
    ports:
      - "27017:27017"
    volumes:
      - ${DATA_SAVE_PATH}/mongo:/data/db
    networks:
      - backend


### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################
volumes:
  mysql:
    driver: "local"
  redis:
    driver: "local"
